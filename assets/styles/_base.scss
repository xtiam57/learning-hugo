@import "variables";
@import "mixins";

:root {
  @each $color, $value in $theme-vars {
    --cm-#{$color}: #{$value};
  }
}

::selection {
  color: $selection-color;
  background: $selection-background;
}

body {
  min-height: 100vh;
  display: grid;
  grid-template-columns: 100%;
}

main {
  grid-area: main;
  overflow: hidden;
}

// Colors
@each $color, $value in $theme-colors {
  .text-#{$color} {
    color: $value !important;
  }
  .bg-#{$color} {
    background-color: $value !important;
  }
}

.text-center {
  text-align: center !important;
}
.text-left {
  text-align: left !important;
}
.text-right {
  text-align: right !important;
}

.float-left {
  float: left !important;
}
.float-right {
  float: right !important;
}

.box-shadow {
  box-shadow: $shadow-base !important;
}

.rounded {
  border-radius: 9999px !important;
}

.padding-0 {
  padding: 0 !important;
}
.padding-x-0 {
  padding-right: 0 !important;
  padding-left: 0 !important;
}
.padding-y-0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}
.padding-top-0 {
  padding-top: 0 !important;
}
.padding-right-0 {
  padding-right: 0 !important;
}
.padding-bottom-0 {
  padding-bottom: 0 !important;
}
.padding-left-0 {
  padding-left: 0 !important;
}

.margin-0 {
  margin: 0 !important;
}
.margin-x-0 {
  margin-right: 0 !important;
  margin-left: 0 !important;
}
.margin-y-0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}
.margin-top-0 {
  margin-top: 0 !important;
}
.margin-right-0 {
  margin-right: 0 !important;
}
.margin-bottom-0 {
  margin-bottom: 0 !important;
}
.margin-left-0 {
  margin-left: 0 !important;
}

figure {
  margin: $margin-base 0;

  &.full,
  &.fit {
    margin-top: 0;
    margin-bottom: 0;
    img {
      width: 100%;
      height: auto;
    }
  }

  figcaption {
    @include make-container();
    text-align: center;
    font-size: $font-size-sm;
    margin-top: $margin-base;

    p {
      margin: 0;
    }
  }
}

// Thanks to https://css-tricks.com/full-width-containers-limited-width-parents/
.full {
  left: 50%;
  margin: $special-width-margin-top -50vw $special-width-margin-bottom !important;
  position: relative;
  right: 50%;
  width: 100vw;
  display: block;
}

// Base on https://css-tricks.com/full-width-containers-limited-width-parents/
.fit {
  left: 50%;
  margin: $special-width-margin-top -50vw $special-width-margin-bottom !important;
  padding: 0 15vw;
  position: relative;
  right: 50%;
  width: 100vw;
  display: block;

  @media (max-width: 1024px) {
    padding: 0;
  }

  @media (min-width: 1280px) {
    padding: 0 20vw;
  }

  @media (min-width: 1900px) {
    padding: 0 25vw;
  }
}

@keyframes lazyload {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.lazyloaded {
  animation: lazyload $lazyload-time ease;
}

@include make-regular-layout();
@include make-bare-layout();

.container {
  @include make-container();
}

.align-items-center {
  align-items: center !important;
}
.align-items-end {
  align-items: flex-end !important;
}
.align-items-start {
  align-items: flex-start !important;
}
.align-items-stretch {
  align-items: stretch !important;
}

.columns {
  display: flex;

  .column {
    padding-right: $margin-base;
    display: block;
    flex-basis: 0;
    flex-grow: 1;
    flex-shrink: 1;

    &:last-child {
      padding-right: 0;
    }
  }

  @media screen and (max-width: $body-max-width) {
    display: block;

    .column {
      padding-right: 0;
    }
  }
}

.terminal-cursor {
  animation: 1s blink ease infinite;
  display: inline-block;
  font-family: $font-family-code;

  &:after {
    content: "_";
  }

  &.cursor-block:after {
    content: "â–Œ"
  }
}

@keyframes blink {
  from,
  to {
    color: transparent;
  }
  50% {
    color: $secondary-color;
  }
}
